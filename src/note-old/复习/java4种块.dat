非静态代码块 
构造代码块=静态代码块
------------------------------------------------------------------------------
  1：java编译器编译java类时，会先将成员属性的声明放到类的前端
　　2：成员变量的初始化工作放到构造函数中
　　3：如果类中有构造代码块，java编译器在编译时会先将构造代码块中的代码移到构造函数中执行，构造函数中原有的代码最后执行
　　4：成员属性的初始化和构造代码块的执行顺序是根据原码中的位置执行
------------------------------------------------------------------------------
相同点：都是在JVM加载类时且在构造方法执行之前执行，在类中都可以定义多个，一般在代码块中对一些static变量进行赋值。
不同点：静态代码块在非静态代码块之前执行（静态代码块-->非静态代码块-->构造方法）。
        静态代码块只在第一次new执行一次，之后不在执行，而非静态代码块在每new一次就执行一次。非静态代码块可以在普通方法中定义（个人感觉作用不大）;而静态代码块不行
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————-
普通代码块=局部代码块
同步代码块：

